select
    ride_id,
    (assign_time_utc + interval '1 hour' * rg.timezone) as assign_time_local,
    cancel_reason,
    cancel_reason_type,
    car_type,
    city,
    company_id,
    coupon_code,
    (create_time_utc + interval '1 hour' * rg.timezone) as create_time_local,
    credit_card_id,
    currency,
    discount,
    driver_application_fee,
    driver_info,
    (drop_off_time_utc + interval '1 hour' * rg.timezone) as drop_off_time_local,
    estimated_price,
    etc_fee,
    pay_status,
    payment_method,
        (
        pick_up_arrived_time_utc + interval '1 hour' * rg.timezone
    ) as pick_up_arrived_time_local,
    -- pick_up_distance_km,
    trunc(pick_up_distance_km, 2) as pick_up_distance_km,
    (pick_up_start_time_utc + interval '1 hour' * rg.timezone) as pick_up_start_time_local,
    pick_up_zone_id,
    refund_amount,
    region,
    -- ride_distance_km,
    trunc(ride_distance_km, 2) as ride_distance_km,
    ride_price,
    ride_status,
    rider_application_fee,
    rider_info,
    rider_uuid,
    sd,
    (start_time_utc + interval '1 hour' * rg.timezone) as start_time_local,
    toll_fee,
    way_point,
    fraud,
    destination_zone_id,
    equipments,
    ride_type,
    -- estimated_distance_km,
    trunc(estimated_distance_km, 2) as estimated_distance_km,
    ad,
    destination,
    pick_up,
    additional_fares,
    ride_option_fee,
    corporate_id,
    mdt,
    driver_system_fee,
    rider_system_fee,
    destination_h3_address,
    pick_up_h3_address,
    creator_info,
    creator_uuid,
    -- estimated_pick_up_distance_km,
    trunc(estimated_pick_up_distance_km, 2) as estimated_pick_up_distance_km,
    accident,
    driver_cancellation_fee,
    rider_cancellation_fee,
    rider_cancellation_reward,
    driver_cancellation_reward,
        (
        reservation_ride_start_time_utc + interval '1 hour' * rg.timezone
    ) as reservation_ride_start_time_local,
    reservation_fee,
    driver_penalty_fee,
    rider_system_fee_tax,
    driver_system_fee_tax,
    creator_system_fee,
    creator_system_fee_tax,
    pick_up_h3_res15,
    destination_h3_res15,
    (confirm_time_utc + interval '1 hour' * rg.timezone) as confirm_time_local,
    payment_item_uuid,
    mdd,
    rider_penalized_amount

from {{ ref("ride_entity_cleansed") }} r
join {{ ref("regions") }} rg on r.region = rg.country
